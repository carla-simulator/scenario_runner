import basic.osc

global path: Path
global my_map: string = "Town04"
global min_lane: int = 2

scenario dut.cut_in_and_slow:
    
    ego_vehicle: Model3
    npc: Rubicon
    event start
    event end

    do serial:
        get_ahead: parallel(duration: [30s..31s]):
            ego_vehicle.drive(path) with: 
                speed([30kph..31kph])
                lane(2, at: start) # left to right: [1..n]
            npc.drive(path, adjust: true) with:
                lane(left_of: ego_vehicle, at: start)
                position([15m..20m], behind: ego_vehicle, at: start)
                position([20m..21m], ahead_of: ego_vehicle, at: end)

        change_lane: parallel(duration: [5s..6s]):
            ego_vehicle.drive(path)
            npc.drive(path) with:
                lane(same_as: ego_vehicle, at: end)

        slow: parallel(duration: [20s..21s]):
            ego_vehicle.drive(path)
            npc.drive(path) with:
                speed([10kph..12kph])

scenario top:
    path.set_map(my_map)      
    path.path_min_driving_lanes(min_lane)
    ego_vehicle: Model3
    npc: Rubicon

    do serial:
        dut.cut_in_and_slow()

