import basic.osc

scenario top:
    path: Path                      	# A path in the map
    path.set_map("Town04")              # Map to employ
    path.path_min_driving_lanes(2)      # Path should have at least two lanes

    ego_vehicle: Model3                	# Ego car
    npc: Rubicon                        # The other car

    event start                         # Define start and end events
    event end
    
    do parallel(duration: 18s):         # Execute the following lines in parallel
        npc.drive(path) with:           # The NPC will drive in the second lane at a constant speed
            speed(30kph)
            lane(2, at: start)          # Lanes from left to right: [1..n]
        
        serial:                                     # The following commands are serially executed
            get_ahead: parallel(duration: 3s):      # Set the initial ego vehicle position between 10 and 20m behind the NPC
                ego_vehicle.drive(path) with:
                    speed(30kph)
                    lane(same_as: npc, at: start)
                    position([10m..20m], behind: npc, at: start)
            
            change_lane1: parallel(duration: 5s):   # Change lane
                ego_vehicle.drive(path) with:
                    lane(left_of: npc, at: end)

            acceleration: parallel(duration: 5s):   # Accelerate for 5s
                ego_vehicle.drive(path) with:
                    speed(45kph)
                
            change_lane2: parallel(duration: 5s):   # Come back to the initial lane
                ego_vehicle.drive(path) with:
                    lane(same_as: npc, at: end)
